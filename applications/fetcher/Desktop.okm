MODULE Desktop;
    IMPORT OS;

    VAR desktopRunning: CHAR;
        desktopWindow: ARRAY WINDOW_STRUCT_SIZE OF CHAR;
        desktopIcons: ARRAY 6 OF Fox32OSButtonWidget;
        desktopIconsToDraw: INT;
        desktopDiskIcon: ARRAY 4096 OF CHAR;

    PROCEDURE DesktopMain(hasIcons: CHAR; iconsResPtr: PTR;);
    VAR tempDskIconResPtr: PTR;
    BEGIN
        desktopRunning := 1;

        (* if icons.res was loaded, then pull the `dsk` resource from it *)
        IF hasIcons THEN
            tempDskIconResPtr := get_resource(iconsResPtr, "dsk", 4096);
            IF tempDskIconResPtr THEN
                copy_memory_bytes(tempDskIconResPtr, PTROF(desktopDiskIcon), 4096);
                free_memory(tempDskIconResPtr);
            END;
        END;

        (* create the window and make it fully transparent, mark it as "always background", and draw the icons to it *)
        new_window(PTROF(desktopWindow), "Desktop", 640, 448, 0, 16, 0, PTROF(desktopIcons));
        fill_overlay(000000000H, get_window_overlay_number(PTROF(desktopWindow)));
        set_window_flags(000000003H, PTROF(desktopWindow)); (* "always background" and "no title bar" *)
        SelectDesktopIcon(0FFFFFFFFH);
        DrawDesktopIcons(PTROF(desktopWindow));

        WHILE desktopRunning DO
            GetNextWindowEvent(PTROF(desktopWindow));

            (* mouse click event *)
            IF eventArgs[0] = PTROF(EVENT_TYPE_MOUSE_CLICK) THEN
                handle_widget_click(PTROF(desktopWindow), eventArgs[1], eventArgs[2]);
                SelectDesktopIcon(0FFFFFFFFH);

            (* button click event *)
            ELSIF eventArgs[0] = PTROF(EVENT_TYPE_BUTTON_CLICK) THEN
                HandleDesktopIconClick(eventArgs[1]);
            END;

            save_state_and_yield_task();
        END;
    END;

    PROCEDURE HandleDesktopIconClick(buttonId: INT;);
    VAR i, x, y, w, h: INT;
        icon: POINTER TO Fox32OSButtonWidget;
    BEGIN
        IF IsDoubleClick(buttonId) THEN
            (* draw the expanding box animation *)
            i := 0;
            icon := PTROF(desktopIcons[buttonId]);
            WHILE i <| 16 DO
                x := RSH(icon^.x *| (16 - i) + 64 *| i, 4);
                y := RSH(icon^.y *| (16 - i) + 64 *| i, 4);
                w := RSH(32 *| (16 - i) + 384 *| i, 4);
                h := RSH(32 *| (16 - i) + 200 *| i, 4);
                DrawWireframeBox(get_window_overlay_number(PTROF(desktopWindow)), x, y, w, h, 020F0F0F0H);
                sleep_task(10);
                draw_filled_rectangle_to_overlay(x, y, w, h, 0, get_window_overlay_number(PTROF(desktopWindow)));
                i := i + 1;
            END;

            (* redraw the icons *)
            DrawDesktopIcons(PTROF(desktopWindow));

            (* launch a new instance of Fetcher *)
            IF launch_fxf_from_disk("/system/fetcher.fxf", get_boot_disk_id(), 0FFFFFFFFH, buttonId, icon^.x, icon^.y, PTROF(desktopWindow)) = 0FFFFFFFFH THEN
                new_messagebox("Failed to start new", "instance of fetcher.fxf", 0, 64, 64, 200);
            END;
        ELSE
            SelectDesktopIcon(buttonId);
        END;
    END;

    PROCEDURE DrawDesktopIcons(desktopWin: PTR;);
    VAR i, y, overlay: INT;
    BEGIN
        IF desktopWin = 0 THEN RETURN(); END;

        (* ensure we know how many icons to draw *)
        SetupDesktopIconStructs();

        (* draw the buttons themselves *)
        draw_widgets_to_window(desktopWin);

        (* set the tilemap and draw the icons! *)
        set_tilemap(PTROF(desktopDiskIcon), 32, 32);
        overlay := get_window_overlay_number(desktopWin);
        i := desktopIconsToDraw;
        y := 16;
        WHILE i DO
            draw_tile_to_overlay(0, 592, y, overlay);
            y := y + 64;
            i := i - 1;
        END;
    END;

    PROCEDURE SelectDesktopIcon(buttonId: INT;);
    VAR desktopIcon: POINTER TO Fox32OSButtonWidget;
        i: INT;
    BEGIN
        i := 0;
        WHILE i <| 6 DO
            desktopIcon := PTROF(desktopIcons[i]);
            desktopIcon^.fgColor := UNSELECTED_FG_COLOR;
            desktopIcon^.bgColor := UNSELECTED_BG_COLOR;
            i := i + 1;
        END;
        IF buttonId <| 6 THEN
            desktopIcon := PTROF(desktopIcons[buttonId]);
            desktopIcon^.fgColor := SELECTED_FG_COLOR;
            desktopIcon^.bgColor := SELECTED_BG_COLOR;
        END;
        DrawDesktopIcons(PTROF(desktopWindow));
    END;

    PROCEDURE SetupDesktopIconStructs();
    VAR desktopIcon: POINTER TO Fox32OSButtonWidget;
        prevDesktopIcon: POINTER TO Fox32OSButtonWidget;
    BEGIN
        desktopIconsToDraw := 0;
        desktopIcon := PTROF(desktopIcons[0]);
        IF PortIn(080001000H OR 0) THEN
            desktopIcon^.type := WIDGET_TYPE_BUTTON;
            desktopIcon^.next := 0;
            desktopIcon^.id := 0;
            desktopIcon^.text := " Disk 0 ";
            desktopIcon^.width := 32;
            desktopIcon^.height := 32 + 16;
            desktopIcon^.x := 592;
            desktopIcon^.y := 16;
            SetDesktopDiskName(0, desktopIcon^.text);
            desktopIconsToDraw := desktopIconsToDraw + 1;
        END;

        IF PortIn(080001000H OR 1) THEN
            desktopIcon^.next := PTROF(desktopIcons[1]);
            prevDesktopIcon := desktopIcon;
            desktopIcon := PTROF(desktopIcons[1]);
            desktopIcon^.type := WIDGET_TYPE_BUTTON;
            desktopIcon^.next := 0;
            desktopIcon^.id := 1;
            desktopIcon^.text := " Disk 1 ";
            desktopIcon^.width := 32;
            desktopIcon^.height := 32 + 16;
            desktopIcon^.x := 592;
            desktopIcon^.y := prevDesktopIcon^.y + 32 + 32;
            SetDesktopDiskName(1, desktopIcon^.text);
            desktopIconsToDraw := desktopIconsToDraw + 1;
        END;

        IF PortIn(080001000H OR 2) THEN
            desktopIcon^.next := PTROF(desktopIcons[2]);
            prevDesktopIcon := desktopIcon;
            desktopIcon := PTROF(desktopIcons[2]);
            desktopIcon^.type := WIDGET_TYPE_BUTTON;
            desktopIcon^.next := 0;
            desktopIcon^.id := 2;
            desktopIcon^.text := " Disk 2 ";
            desktopIcon^.width := 32;
            desktopIcon^.height := 32 + 16;
            desktopIcon^.x := 592;
            desktopIcon^.y := prevDesktopIcon^.y + 32 + 32;
            SetDesktopDiskName(2, desktopIcon^.text);
            desktopIconsToDraw := desktopIconsToDraw + 1;
        END;

        IF PortIn(080001000H OR 3) THEN
            desktopIcon^.next := PTROF(desktopIcons[3]);
            prevDesktopIcon := desktopIcon;
            desktopIcon := PTROF(desktopIcons[3]);
            desktopIcon^.type := WIDGET_TYPE_BUTTON;
            desktopIcon^.next := 0;
            desktopIcon^.id := 3;
            desktopIcon^.text := " Disk 3 ";
            desktopIcon^.width := 32;
            desktopIcon^.height := 32 + 16;
            desktopIcon^.x := 592;
            desktopIcon^.y := prevDesktopIcon^.y + 32 + 32;
            SetDesktopDiskName(3, desktopIcon^.text);
            desktopIconsToDraw := desktopIconsToDraw + 1;
        END;

        IF IsRomDiskAvailable() THEN
            desktopIcon^.next := PTROF(desktopIcons[4]);
            prevDesktopIcon := desktopIcon;
            desktopIcon := PTROF(desktopIcons[4]);
            desktopIcon^.type := WIDGET_TYPE_BUTTON;
            desktopIcon^.next := 0;
            desktopIcon^.id := 4;
            desktopIcon^.text := "ROM Disk";
            desktopIcon^.width := 32;
            desktopIcon^.height := 32 + 16;
            desktopIcon^.x := 592;
            desktopIcon^.y := prevDesktopIcon^.y + 32 + 32;
            SetDesktopDiskName(4, desktopIcon^.text);
            desktopIconsToDraw := desktopIconsToDraw + 1;
        END;

        IF IsRamDiskFormatted() THEN
            desktopIcon^.next := PTROF(desktopIcons[5]);
            prevDesktopIcon := desktopIcon;
            desktopIcon := PTROF(desktopIcons[5]);
            desktopIcon^.type := WIDGET_TYPE_BUTTON;
            desktopIcon^.next := 0;
            desktopIcon^.id := 5;
            desktopIcon^.text := "RAM Disk";
            desktopIcon^.width := 32;
            desktopIcon^.height := 32 + 16;
            desktopIcon^.x := 592;
            desktopIcon^.y := prevDesktopIcon^.y + 32 + 32;
            SetDesktopDiskName(5, desktopIcon^.text);
            desktopIconsToDraw := desktopIconsToDraw + 1;
        END;
    END;

    PROCEDURE SetDesktopDiskName(diskId: INT; buffer: POINTER TO CHAR;);
    VAR fakeStruct: ARRAY FILE_STRUCT_SIZE OF CHAR;
    BEGIN
        PUTCHAR(PTROF(fakeStruct), diskId);
        PUTSHORT(PTROF(fakeStruct) + 1, 1); (* root dir *)
        PUTCHAR(PTROF(fakeStruct) + 7, 0);
        get_dir_name(buffer, PTROF(fakeStruct));
    END;
END.
